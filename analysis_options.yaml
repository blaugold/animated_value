include: all_lint_rules.yaml
analyzer:
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true
  errors:
    # Otherwise cause the import of all_lint_rules to warn because of some rules conflicts.
    # We explicitly enabled even conflicting rules and are fixing the conflict
    # in this file.
    included_file_warning: ignore

linter:
  rules:
    # Deos not always make code more readable.
    cascade_invocations: false

    # Conflicts with `prefer_single_quotes`
    # Single quotes are easier to type and don't compromise on readability.
    prefer_double_quotes: false

    # Conflicts with `omit_local_variable_types` and other rules.
    # As per Dart guidelines, we want to avoid unnecessary types to make the code
    # more readable.
    # See https://dart.dev/guides/language/effective-dart/design#avoid-type-annotating-initialized-local-variables
    always_specify_types: false

    # Incompatible with `prefer_final_locals`
    # Having immutable local variables makes larger functions more predictable
    # so we will use `prefer_final_locals` instead.
    unnecessary_final: false

    # Not quite suitable for Flutter, which may have a `build` method with a single
    # return, but that return is still complex enough that a "body" is worth it.
    prefer_expression_function_bodies: false

    # Conflicts with the convention used by flutter, which puts `Key key`
    # and `@required Widget child` last.
    always_put_required_named_parameters_first: false

    # `as` is not that bad.
    # Explicit exceptions is better than implicit exceptions.
    avoid_as: false

    # This project doesn't use Flutter-style todos
    flutter_style_todos: false

    # There are situations where we voluntarily want to catch everything,
    # especially as a library.
    avoid_catches_without_on_clauses: false

    # Conflicts with `prefer_relative_imports`.
    always_use_package_imports: false

    # Often the expression is enough.
    prefer_asserts_with_message: false

    # Not a common style and would add a lot of verbosity to function signature.
    # 'parameter_assignments' already enforces this to an extent.
    prefer_final_parameters: false

    diagnostic_describe_all_properties: false
